(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(537),o=e.n(r),s=e(645),a=e.n(s)()(o());a.push([n.id,":root {\n    --grid-color: rgb(141, 140, 140);\n    --text-color: rgb(110, 109, 109);\n}\n\n* {\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    background-color: rgb(228, 228, 253);\n}\n\nh1,\nh3 {\n    padding: 1rem;\n    color: var(--text-color);\n}\n\nh1,\n#instructions {\n    text-align: center;\n}\n\nbutton {\n    margin: 2rem;\n    margin-left: 3rem;\n    padding: 0.5rem 1rem;\n}\n\n.square {\n    border: 1px solid var(--grid-color);\n    height: 2rem;\n    width: 2rem;\n    text-align: center;\n}\n\n.coords {\n    font-weight: 600;\n    color: var(--grid-color);\n}\n\n#instructions {\n    height: 1.5rem;\n}\n\n#board-n-menu {\n    display: flex;\n}\n\n#user-gameboard,\n#computer-gameboard {\n    margin: 2.5%;\n    width: 45%;\n}\n\n#boards-container {\n    display: flex;\n}\n\n#user-board,\n#computer-board {\n    display: grid;\n    grid-template-columns: repeat(11, 1fr);\n    grid-template-rows: repeat(11, 1fr);\n    width: 23rem;\n}\n\n.noclick {\n    pointer-events: none;\n}\n\n.noclickOpp {\n    pointer-events: none;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,gCAAgC;IAChC,gCAAgC;AACpC;;AAEA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;;IAEI,aAAa;IACb,wBAAwB;AAC5B;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,mCAAmC;IACnC,YAAY;IACZ,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;IACb,sCAAsC;IACtC,mCAAmC;IACnC,YAAY;AAChB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;AACxB",sourcesContent:[":root {\n    --grid-color: rgb(141, 140, 140);\n    --text-color: rgb(110, 109, 109);\n}\n\n* {\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    background-color: rgb(228, 228, 253);\n}\n\nh1,\nh3 {\n    padding: 1rem;\n    color: var(--text-color);\n}\n\nh1,\n#instructions {\n    text-align: center;\n}\n\nbutton {\n    margin: 2rem;\n    margin-left: 3rem;\n    padding: 0.5rem 1rem;\n}\n\n.square {\n    border: 1px solid var(--grid-color);\n    height: 2rem;\n    width: 2rem;\n    text-align: center;\n}\n\n.coords {\n    font-weight: 600;\n    color: var(--grid-color);\n}\n\n#instructions {\n    height: 1.5rem;\n}\n\n#board-n-menu {\n    display: flex;\n}\n\n#user-gameboard,\n#computer-gameboard {\n    margin: 2.5%;\n    width: 45%;\n}\n\n#boards-container {\n    display: flex;\n}\n\n#user-board,\n#computer-board {\n    display: grid;\n    grid-template-columns: repeat(11, 1fr);\n    grid-template-rows: repeat(11, 1fr);\n    width: 23rem;\n}\n\n.noclick {\n    pointer-events: none;\n}\n\n.noclickOpp {\n    pointer-events: none;\n}"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,s){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);r&&a[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),e&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=e):u[2]=e),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([s]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var s={},a=[],i=0;i<n.length;i++){var c=n[i],l=r.base?c[0]+r.base:c[0],u=s[l]||0,d="".concat(l," ").concat(u);s[l]=u+1;var h=e(d),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==h)t[h].references++,t[h].updater(A);else{var p=o(A,r);r.byIndex=i,t.splice(i,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var s=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<s.length;a++){var i=e(s[a]);t[i].references--}for(var c=r(n,o),l=0;l<s.length;l++){var u=e(s[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var s=e.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return n[r](s,s.exports,e),s.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),s=e(569),a=e.n(s),i=e(565),c=e.n(i),l=e(216),u=e.n(l),d=e(589),h=e.n(d),A=e(426),p={};function f(n){let t=[];const e="ABCDEFGHIJ",r=e.charAt(Math.floor(Math.random()*e.length));let o=0;for(;0===o;)5===n?o=Math.floor(7*Math.random()):4===n?o=Math.floor(8*Math.random()):3===n?o=Math.floor(9*Math.random()):2===n&&(o=Math.floor(10*Math.random()));for(let e=0;e<n;e++){let n=r+o;t.push(n),o++}return t}function m(){return Math.floor(2*Math.random())}function g(n){let t=[];t=function(){const n=[5,4,3,3,2];let t=[],e=[];if(0===m()){let r=f(n[0]);t.push(r),r.forEach((n=>{e.push(n)}))}else{let r=function(n){let t=[];const e="ABCDEFGHIJ";let r;5===n?r=e.charAt(Math.floor(5*Math.random())):4===n?r=e.charAt(Math.floor(6*Math.random())):3===n?r=e.charAt(Math.floor(7*Math.random())):2===n&&(r=e.charAt(Math.floor(8*Math.random())));let o=0;for(;0===o;)o=Math.floor(11*Math.random());const s=e.slice(e.indexOf(r),e.indexOf(r)+n);for(let n=0;n<s.length;n++){let e=s.charAt(n)+o;t.push(e)}return t}(n[0]);t.push(r),r.forEach((n=>{e.push(n)}))}for(let r=1;r<5;r++)if(0===m()){let o=!0;for(;!0===o;){let s=[],a=f(n[r]);for(let n=0;n<a.length;n++)s.push(e.indexOf(a[n]));if(s.every((n=>-1==n))){o=!1,t.push(a),a.forEach((n=>{e.push(n)}));break}}}else{let o=!0;for(;!0===o;){let s=[],a=f(n[r]);for(let n=0;n<a.length;n++)s.push(e.indexOf(a[n]));if(s.every((n=>-1==n))){o=!1,t.push(a),a.forEach((n=>{e.push(n)}));break}}}return t}();let e=[5,4,3,3,2];for(let r=0;r<5;r++)n.placeShip(e[r],t[r]);return t}function C(){return{chosenCoords:[],attack:function(){let n,t=!0;for(;!0===t;)if(n=v(),-1===this.chosenCoords.indexOf(n)){this.chosenCoords.push(n),t=!1;break}return n}}}function v(){const n="ABCDEFGHIJ",t=["1","2","3","4","5","6","7","8","9","10"];return n.charAt(Math.floor(Math.random()*n.length))+t[Math.floor(Math.random()*t.length)]}function b(n){for(let t=0;t<n.length;t++)n[t].forEach((n=>{document.getElementsByClassName(`square user ${n}`)[0].style.backgroundColor="#483d8b"}))}function x(n,t,e){let r=document.getElementsByClassName(`square ${e} ${t}`);"x"==n?(r[0].textContent="❌",r[0].style.backgroundColor="#000067",r[0].classList.add("noclick")):(r[0].textContent="●",r[0].style.backgroundColor="#a6a6a6",r[0].classList.add("noclick"))}function y(n,t){let e=n.checkGameOver(),r=t.checkGameOver();!0===e||!0===r?(document.querySelectorAll(".comp").forEach((n=>{n.classList.add("noclick")})),!0===e?(document.getElementById("instructions").textContent="Game Over! You lose! Refresh the page to play again.",console.log(n.ships)):!0===r&&(document.getElementById("instructions").textContent="Game Over! You win! Refresh the page to play again.")):document.getElementById("instructions").textContent="You get another turn."}p.styleTagTransform=h(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=u(),t()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals,C();const I=C(),E={ships:[],missedAttacks:[],placeShip:function(n,t){return this.ships.push({length:n,coords:t,hit:function(n){const t=this.coords.indexOf(n);return this.coords[t]="x",this.coords},isSunk:function(){return this.coords.filter((n=>"x"===n)).length===this.length}}),this.ships},receiveAttack:function(n){let t=[];for(let e=0;e<this.ships.length;e++){let r=this.ships[e].coords.indexOf(n);t.push(r)}let e=t.findIndex((n=>-1!==n));return-1==e?(this.missedAttacks.push(n),"miss"):(this.ships[e].coords[t[e]]="x","x")},checkGameOver:function(){let n=[];for(let t=0;t<this.ships.length;t++)for(let e=0;e<this.ships[t].coords.length;e++)n.push(this.ships[t].coords[e]);return!0===n.every((n=>"x"===n))}},k={ships:[],missedAttacks:[],placeShip:function(n,t){return this.ships.push({length:n,coords:t,hit:function(n){const t=this.coords.indexOf(n);return this.coords[t]="x",this.coords},isSunk:function(){return this.coords.filter((n=>"x"===n)).length===this.length}}),this.ships},receiveAttack:function(n){let t=[];for(let e=0;e<this.ships.length;e++){let r=this.ships[e].coords.indexOf(n);t.push(r)}let e=t.findIndex((n=>-1!==n));return-1==e?(this.missedAttacks.push(n),"miss"):(this.ships[e].coords[t[e]]="x","x")},checkGameOver:function(){let n=[];for(let t=0;t<this.ships.length;t++)for(let e=0;e<this.ships[t].coords.length;e++)n.push(this.ships[t].coords[e]);return!0===n.every((n=>"x"===n))}};var B;b(g(E)),g(k),B=E,document.getElementById("reset-button").addEventListener("click",(()=>{document.querySelectorAll(".user").forEach((n=>{n.style.backgroundColor=""})),B.ships=[],b(g(B))})),function(n,t,e){const r=document.getElementById("begin-button");r.addEventListener("click",(()=>{document.getElementById("instructions").textContent="Your turn! Click on a square on the opponent's grid to begin.",document.getElementById("reset-button").disabled=!0,document.querySelectorAll(".comp").forEach((r=>{const o=r.className.split(" ")[2];r.addEventListener("click",(()=>{!function(n,t,e,r){let o=t.receiveAttack(n),s=document.getElementsByClassName(`square comp ${n}`);"x"==o?(s[0].textContent="❌",s[0].style.backgroundColor="#000067",s[0].classList.add("noclick"),y(r,t)):(document.getElementById("instructions").textContent="Miss!",s[0].textContent="●",s[0].style.backgroundColor="#a6a6a6",s[0].classList.add("noclick"),function(n,t,e){document.getElementById("instructions").textContent="Opponent's turn...";let r=n.attack(),o=t.receiveAttack(r);setTimeout((function(){x(o,r,"user"),y(t,e)}),500);let s=!1;for("x"===o&&(s=!0);!0===s;)if(r=n.attack(),o=t.receiveAttack(r),x(o,r,"user"),y(t,e),"x"!==o){x(o,r,"user"),s=!1;break}}(e,r,t))}(o,n,t,e)}))})),r.disabled=!0}))}(k,I,E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,