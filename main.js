(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(537),o=e.n(r),s=e(645),a=e.n(s)()(o());a.push([n.id,":root {\n    --grid-color: rgb(141, 140, 140);\n    --text-color: rgb(110, 109, 109);\n}\n\n* {\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    background-color: rgb(228, 228, 253);\n}\n\nh1,\nh3 {\n    padding: 1rem;\n    color: var(--text-color);\n}\n\nh1,\n#instructions {\n    text-align: center;\n}\n\nbutton {\n    margin: 2rem;\n    margin-left: 3rem;\n    padding: 0.5rem 1rem;\n}\n\n.square {\n    border: 1px solid var(--grid-color);\n    height: 2rem;\n    width: 2rem;\n    text-align: center;\n}\n\n.coords {\n    font-weight: 600;\n    color: var(--grid-color);\n}\n\n#instructions {\n    height: 1.5rem;\n}\n\n#board-n-menu {\n    display: flex;\n}\n\n#user-gameboard,\n#computer-gameboard {\n    margin: 2.5%;\n    width: 45%;\n}\n\n#boards-container {\n    display: flex;\n}\n\n#user-board,\n#computer-board {\n    display: grid;\n    grid-template-columns: repeat(11, 1fr);\n    grid-template-rows: repeat(11, 1fr);\n    width: 23rem;\n}\n\n.noclick {\n    pointer-events: none;\n}\n\n.noclickOpp {\n    pointer-events: none;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,gCAAgC;IAChC,gCAAgC;AACpC;;AAEA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;;IAEI,aAAa;IACb,wBAAwB;AAC5B;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,mCAAmC;IACnC,YAAY;IACZ,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;IACb,sCAAsC;IACtC,mCAAmC;IACnC,YAAY;AAChB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;AACxB",sourcesContent:[":root {\n    --grid-color: rgb(141, 140, 140);\n    --text-color: rgb(110, 109, 109);\n}\n\n* {\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    background-color: rgb(228, 228, 253);\n}\n\nh1,\nh3 {\n    padding: 1rem;\n    color: var(--text-color);\n}\n\nh1,\n#instructions {\n    text-align: center;\n}\n\nbutton {\n    margin: 2rem;\n    margin-left: 3rem;\n    padding: 0.5rem 1rem;\n}\n\n.square {\n    border: 1px solid var(--grid-color);\n    height: 2rem;\n    width: 2rem;\n    text-align: center;\n}\n\n.coords {\n    font-weight: 600;\n    color: var(--grid-color);\n}\n\n#instructions {\n    height: 1.5rem;\n}\n\n#board-n-menu {\n    display: flex;\n}\n\n#user-gameboard,\n#computer-gameboard {\n    margin: 2.5%;\n    width: 45%;\n}\n\n#boards-container {\n    display: flex;\n}\n\n#user-board,\n#computer-board {\n    display: grid;\n    grid-template-columns: repeat(11, 1fr);\n    grid-template-rows: repeat(11, 1fr);\n    width: 23rem;\n}\n\n.noclick {\n    pointer-events: none;\n}\n\n.noclickOpp {\n    pointer-events: none;\n}"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,s){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);r&&a[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),e&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=e):u[2]=e),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([s]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var s={},a=[],i=0;i<n.length;i++){var c=n[i],l=r.base?c[0]+r.base:c[0],u=s[l]||0,d="".concat(l," ").concat(u);s[l]=u+1;var h=e(d),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==h)t[h].references++,t[h].updater(A);else{var p=o(A,r);r.byIndex=i,t.splice(i,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var s=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<s.length;a++){var i=e(s[a]);t[i].references--}for(var c=r(n,o),l=0;l<s.length;l++){var u=e(s[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var s=e.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return n[r](s,s.exports,e),s.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),s=e(569),a=e.n(s),i=e(565),c=e.n(i),l=e(216),u=e.n(l),d=e(589),h=e.n(d),A=e(426),p={};function f(n){let t=[];const e="ABCDEFGHIJ",r=e.charAt(Math.floor(Math.random()*e.length));let o=0;for(;0===o;)5===n?o=Math.floor(7*Math.random()):4===n?o=Math.floor(8*Math.random()):3===n?o=Math.floor(9*Math.random()):2===n&&(o=Math.floor(10*Math.random()));for(let e=0;e<n;e++){let n=r+o;t.push(n),o++}return t}function m(){return Math.floor(2*Math.random())}function g(n){let t=[];t=function(){const n=[5,4,3,3,2];let t=[],e=[];if(0===m()){let r=f(n[0]);t.push(r),r.forEach((n=>{e.push(n)}))}else{let r=function(n){let t=[];const e="ABCDEFGHIJ";let r;5===n?r=e.charAt(Math.floor(5*Math.random())):4===n?r=e.charAt(Math.floor(6*Math.random())):3===n?r=e.charAt(Math.floor(7*Math.random())):2===n&&(r=e.charAt(Math.floor(8*Math.random())));let o=0;for(;0===o;)o=Math.floor(11*Math.random());const s=e.slice(e.indexOf(r),e.indexOf(r)+n);for(let n=0;n<s.length;n++){let e=s.charAt(n)+o;t.push(e)}return t}(n[0]);t.push(r),r.forEach((n=>{e.push(n)}))}for(let r=1;r<5;r++)if(0===m()){let o=!0;for(;!0===o;){let s=[],a=f(n[r]);for(let n=0;n<a.length;n++)s.push(e.indexOf(a[n]));if(s.every((n=>-1==n))){o=!1,t.push(a),a.forEach((n=>{e.push(n)}));break}}}else{let o=!0;for(;!0===o;){let s=[],a=f(n[r]);for(let n=0;n<a.length;n++)s.push(e.indexOf(a[n]));if(s.every((n=>-1==n))){o=!1,t.push(a),a.forEach((n=>{e.push(n)}));break}}}return t}();let e=[5,4,3,3,2];for(let r=0;r<5;r++)n.placeShip(e[r],t[r]);return t}function C(){return{chosenCoords:[],attack:function(){let n,t=!0;for(;!0===t;)if(n=v(),-1===this.chosenCoords.indexOf(n)){this.chosenCoords.push(n),t=!1;break}return n}}}function v(){const n="ABCDEFGHIJ",t=["1","2","3","4","5","6","7","8","9","10"];return n.charAt(Math.floor(Math.random()*n.length))+t[Math.floor(Math.random()*t.length)]}function x(n){for(let t=0;t<n.length;t++)n[t].forEach((n=>{document.getElementsByClassName(`square user ${n}`)[0].style.backgroundColor="#483d8b"}))}function b(n,t,e){let r=document.getElementsByClassName(`square ${e} ${t}`);"x"==n?(r[0].textContent="❌",r[0].style.backgroundColor="#000067",r[0].classList.add("noclick")):(document.getElementById("instructions").textContent="Miss!",r[0].textContent="●",r[0].style.backgroundColor="#a6a6a6",r[0].classList.add("noclick"))}function y(n,t){let e=n.checkGameOver(),r=t.checkGameOver();!0===e||!0===r?(document.querySelectorAll(".comp").forEach((n=>{n.classList.add("noclick")})),document.getElementById("instructions").textContent=!0===e?"Game Over! You lose! Refresh the page to play again.":"Game Over! You win! Refresh the page to play again."):document.getElementById("instructions").textContent="You get another turn."}p.styleTagTransform=h(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=u(),t()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals,C();const I=C(),E={ships:[],missedAttacks:[],placeShip:function(n,t){return this.ships.push({length:n,coords:t,hit:function(n){const t=this.coords.indexOf(n);return this.coords[t]="x",this.coords},isSunk:function(){return this.coords.filter((n=>"x"===n)).length===this.length}}),this.ships},receiveAttack:function(n){let t=[];for(let e=0;e<this.ships.length;e++){let r=this.ships[e].coords.indexOf(n);t.push(r)}let e=t.findIndex((n=>-1!==n));return-1==e?(this.missedAttacks.push(n),"miss"):(this.ships[e].coords[t[e]]="x","x")},checkGameOver:function(){let n=[];for(let t=0;t<this.ships.length;t++)for(let e=0;e<this.ships[t].coords.length;e++)n.push(this.ships[t].coords[e]);return!0===n.every((n=>"x"===n))}},k={ships:[],missedAttacks:[],placeShip:function(n,t){return this.ships.push({length:n,coords:t,hit:function(n){const t=this.coords.indexOf(n);return this.coords[t]="x",this.coords},isSunk:function(){return this.coords.filter((n=>"x"===n)).length===this.length}}),this.ships},receiveAttack:function(n){let t=[];for(let e=0;e<this.ships.length;e++){let r=this.ships[e].coords.indexOf(n);t.push(r)}let e=t.findIndex((n=>-1!==n));return-1==e?(this.missedAttacks.push(n),"miss"):(this.ships[e].coords[t[e]]="x","x")},checkGameOver:function(){let n=[];for(let t=0;t<this.ships.length;t++)for(let e=0;e<this.ships[t].coords.length;e++)n.push(this.ships[t].coords[e]);return!0===n.every((n=>"x"===n))}};var B;x(g(E)),g(k),B=E,document.getElementById("reset-button").addEventListener("click",(()=>{document.querySelectorAll(".user").forEach((n=>{n.style.backgroundColor=""})),B.ships=[],x(g(B))})),function(n,t,e){const r=document.getElementById("begin-button");r.addEventListener("click",(()=>{document.getElementById("instructions").textContent="Your turn! Click on a square on the opponent's grid to begin.",document.getElementById("reset-button").disabled=!0,document.querySelectorAll(".comp").forEach((r=>{const o=r.className.split(" ")[2];r.addEventListener("click",(()=>{!function(n,t,e,r){let o=t.receiveAttack(n),s=document.getElementsByClassName(`square comp ${n}`);"x"==o?(s[0].textContent="❌",s[0].style.backgroundColor="#000067",s[0].classList.add("noclick"),y(r,t)):(document.getElementById("instructions").textContent="Miss!",s[0].textContent="●",s[0].style.backgroundColor="#a6a6a6",s[0].classList.add("noclick"),function(n,t,e){document.getElementById("instructions").textContent="Opponent's turn...";let r=n.attack(),o=t.receiveAttack(r);for(setTimeout((function(){b(o,r,"user"),y(t,e)}),1e3);"x"===o;)if(y(t,e),r=n.attack(),o=t.receiveAttack(r),b(o,r,"user"),y(t,e),"x"!==o){document.getElementById("instructions").textContent="Your turn!";break}}(e,r,t))}(o,n,t,e)}))})),r.disabled=!0}))}(k,I,E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoid0ZBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksNGhDQUE2aEMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNkJBQTZCLE1BQVEsR0FBRyxTQUFXLG1mQUFtZixlQUFpQixDQUFDLDZoQ0FBNmhDLFdBQWEsTUFFbnNGLFcsUUNEQUQsRUFBT0UsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBNkZYLE9BM0ZBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVLEdBQ1ZDLE9BQStCLElBQVpGLEVBQUssR0E0QjVCLE9BMUJJQSxFQUFLLEtBQ1BDLEdBQVcsY0FBY0UsT0FBT0gsRUFBSyxHQUFJLFFBR3ZDQSxFQUFLLEtBQ1BDLEdBQVcsVUFBVUUsT0FBT0gsRUFBSyxHQUFJLE9BR25DRSxJQUNGRCxHQUFXLFNBQVNFLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE9BRzVFQyxHQUFXTixFQUF1QkssR0FFOUJFLElBQ0ZELEdBQVcsS0FHVEQsRUFBSyxLQUNQQyxHQUFXLEtBR1RELEVBQUssS0FDUEMsR0FBVyxLQUdOQSxLQUNOSSxLQUFLLEtBSVZULEVBQUtVLEVBQUksU0FBV0MsRUFBU0MsRUFBT0MsRUFBUUMsRUFBVUMsR0FDN0IsaUJBQVpKLElBQ1RBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLE9BQVNLLEtBRzdCLElBQUlDLEVBQXlCLEdBRTdCLEdBQUlKLEVBQ0YsSUFBSyxJQUFJSyxFQUFJLEVBQUdBLEVBQUloQixLQUFLTSxPQUFRVSxJQUFLLENBQ3BDLElBQUlyQixFQUFLSyxLQUFLZ0IsR0FBRyxHQUVQLE1BQU5yQixJQUNGb0IsRUFBdUJwQixJQUFNLEdBS25DLElBQUssSUFBSXNCLEVBQUssRUFBR0EsRUFBS1IsRUFBUUgsT0FBUVcsSUFBTSxDQUMxQyxJQUFJZixFQUFPLEdBQUdHLE9BQU9JLEVBQVFRLElBRXpCTixHQUFVSSxFQUF1QmIsRUFBSyxXQUlyQixJQUFWVyxTQUNjLElBQVpYLEVBQUssS0FHZEEsRUFBSyxHQUFLLFNBQVNHLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxNQUYvRkEsRUFBSyxHQUFLVyxHQU9WSCxJQUNHUixFQUFLLElBR1JBLEVBQUssR0FBSyxVQUFVRyxPQUFPSCxFQUFLLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLEtBQzFEQSxFQUFLLEdBQUtRLEdBSFZSLEVBQUssR0FBS1EsR0FPVkUsSUFDR1YsRUFBSyxJQUdSQSxFQUFLLEdBQUssY0FBY0csT0FBT0gsRUFBSyxHQUFJLE9BQU9HLE9BQU9ILEVBQUssR0FBSSxLQUMvREEsRUFBSyxHQUFLVSxHQUhWVixFQUFLLEdBQUssR0FBR0csT0FBT08sSUFPeEJkLEVBQUtMLEtBQUtTLE1BSVBKLEksUUNsR1RKLEVBQU9FLFFBQVUsU0FBVU0sR0FDekIsSUFBSUMsRUFBVUQsRUFBSyxHQUNmZ0IsRUFBYWhCLEVBQUssR0FFdEIsSUFBS2dCLEVBQ0gsT0FBT2YsRUFHVCxHQUFvQixtQkFBVGdCLEtBQXFCLENBQzlCLElBQUlDLEVBQVNELEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVU4sTUFDekRPLEVBQU8sK0RBQStEcEIsT0FBT2UsR0FDN0VNLEVBQWdCLE9BQU9yQixPQUFPb0IsRUFBTSxPQUNwQ0UsRUFBYVQsRUFBV1UsUUFBUTNCLEtBQUksU0FBVTRCLEdBQ2hELE1BQU8saUJBQWlCeEIsT0FBT2EsRUFBV1ksWUFBYyxJQUFJekIsT0FBT3dCLEVBQVEsVUFFN0UsTUFBTyxDQUFDMUIsR0FBU0UsT0FBT3NCLEdBQVl0QixPQUFPLENBQUNxQixJQUFnQm5CLEtBQUssTUFHbkUsTUFBTyxDQUFDSixHQUFTSSxLQUFLLFEsUUNsQnhCLElBQUl3QixFQUFjLEdBRWxCLFNBQVNDLEVBQXFCQyxHQUc1QixJQUZBLElBQUlDLEdBQVUsRUFFTDFCLEVBQUksRUFBR0EsRUFBSXVCLEVBQVl6QixPQUFRRSxJQUN0QyxHQUFJdUIsRUFBWXZCLEdBQUd5QixhQUFlQSxFQUFZLENBQzVDQyxFQUFTMUIsRUFDVCxNQUlKLE9BQU8wQixFQUdULFNBQVNDLEVBQWFyQyxFQUFNc0MsR0FJMUIsSUFIQSxJQUFJQyxFQUFhLEdBQ2JDLEVBQWMsR0FFVDlCLEVBQUksRUFBR0EsRUFBSVYsRUFBS1EsT0FBUUUsSUFBSyxDQUNwQyxJQUFJTixFQUFPSixFQUFLVSxHQUNaYixFQUFLeUMsRUFBUUcsS0FBT3JDLEVBQUssR0FBS2tDLEVBQVFHLEtBQU9yQyxFQUFLLEdBQ2xEc0MsRUFBUUgsRUFBVzFDLElBQU8sRUFDMUJzQyxFQUFhLEdBQUc1QixPQUFPVixFQUFJLEtBQUtVLE9BQU9tQyxHQUMzQ0gsRUFBVzFDLEdBQU02QyxFQUFRLEVBQ3pCLElBQUlDLEVBQW9CVCxFQUFxQkMsR0FDekNTLEVBQU0sQ0FDUkMsSUFBS3pDLEVBQUssR0FDVlEsTUFBT1IsRUFBSyxHQUNaMEMsVUFBVzFDLEVBQUssR0FDaEJVLFNBQVVWLEVBQUssR0FDZlcsTUFBT1gsRUFBSyxJQUdkLElBQTJCLElBQXZCdUMsRUFDRlYsRUFBWVUsR0FBbUJJLGFBQy9CZCxFQUFZVSxHQUFtQkssUUFBUUosT0FDbEMsQ0FDTCxJQUFJSSxFQUFVQyxFQUFnQkwsRUFBS04sR0FDbkNBLEVBQVFZLFFBQVV4QyxFQUNsQnVCLEVBQVlrQixPQUFPekMsRUFBRyxFQUFHLENBQ3ZCeUIsV0FBWUEsRUFDWmEsUUFBU0EsRUFDVEQsV0FBWSxJQUloQlAsRUFBWTdDLEtBQUt3QyxHQUduQixPQUFPSyxFQUdULFNBQVNTLEVBQWdCTCxFQUFLTixHQUM1QixJQUFJYyxFQUFNZCxFQUFRZSxPQUFPZixHQWV6QixPQWRBYyxFQUFJRSxPQUFPVixHQUVHLFNBQWlCVyxHQUM3QixHQUFJQSxFQUFRLENBQ1YsR0FBSUEsRUFBT1YsTUFBUUQsRUFBSUMsS0FBT1UsRUFBTzNDLFFBQVVnQyxFQUFJaEMsT0FBUzJDLEVBQU9ULFlBQWNGLEVBQUlFLFdBQWFTLEVBQU96QyxXQUFhOEIsRUFBSTlCLFVBQVl5QyxFQUFPeEMsUUFBVTZCLEVBQUk3QixNQUN6SixPQUdGcUMsRUFBSUUsT0FBT1YsRUFBTVcsUUFFakJILEVBQUlJLFVBT1Y1RCxFQUFPRSxRQUFVLFNBQVVFLEVBQU1zQyxHQUcvQixJQUFJbUIsRUFBa0JwQixFQUR0QnJDLEVBQU9BLEdBQVEsR0FEZnNDLEVBQVVBLEdBQVcsSUFHckIsT0FBTyxTQUFnQm9CLEdBQ3JCQSxFQUFVQSxHQUFXLEdBRXJCLElBQUssSUFBSWhELEVBQUksRUFBR0EsRUFBSStDLEVBQWdCakQsT0FBUUUsSUFBSyxDQUMvQyxJQUNJaUQsRUFBUXpCLEVBREt1QixFQUFnQi9DLElBRWpDdUIsRUFBWTBCLEdBQU9aLGFBS3JCLElBRkEsSUFBSWEsRUFBcUJ2QixFQUFhcUIsRUFBU3BCLEdBRXRDdUIsRUFBSyxFQUFHQSxFQUFLSixFQUFnQmpELE9BQVFxRCxJQUFNLENBQ2xELElBRUlDLEVBQVM1QixFQUZLdUIsRUFBZ0JJLElBSUssSUFBbkM1QixFQUFZNkIsR0FBUWYsYUFDdEJkLEVBQVk2QixHQUFRZCxVQUVwQmYsRUFBWWtCLE9BQU9XLEVBQVEsSUFJL0JMLEVBQWtCRyxLLFFDbkd0QixJQUFJRyxFQUFPLEdBb0NYbkUsRUFBT0UsUUFWUCxTQUEwQmtFLEVBQVFDLEdBQ2hDLElBQUlDLEVBeEJOLFNBQW1CQSxHQUNqQixRQUE0QixJQUFqQkgsRUFBS0csR0FBeUIsQ0FDdkMsSUFBSUMsRUFBY0MsU0FBU0MsY0FBY0gsR0FFekMsR0FBSUksT0FBT0MsbUJBQXFCSixhQUF1QkcsT0FBT0Msa0JBQzVELElBR0VKLEVBQWNBLEVBQVlLLGdCQUFnQkMsS0FDMUMsTUFBT0MsR0FFUFAsRUFBYyxLQUlsQkosRUFBS0csR0FBVUMsRUFHakIsT0FBT0osRUFBS0csR0FNQ1MsQ0FBVVgsR0FFdkIsSUFBS0UsRUFDSCxNQUFNLElBQUlVLE1BQU0sMkdBR2xCVixFQUFPVyxZQUFZWixLLFFDekJyQnJFLEVBQU9FLFFBUFAsU0FBNEJ3QyxHQUMxQixJQUFJd0MsRUFBVVYsU0FBU1csY0FBYyxTQUdyQyxPQUZBekMsRUFBUTBDLGNBQWNGLEVBQVN4QyxFQUFRMkMsWUFDdkMzQyxFQUFRMEIsT0FBT2MsRUFBU3hDLEVBQVFBLFNBQ3pCd0MsSSxjQ0lUbEYsRUFBT0UsUUFSUCxTQUF3Q29GLEdBQ3RDLElBQUlDLEVBQW1ELEtBRW5EQSxHQUNGRCxFQUFhRSxhQUFhLFFBQVNELEssUUM4RHZDdkYsRUFBT0UsUUFaUCxTQUFnQndDLEdBQ2QsSUFBSTRDLEVBQWU1QyxFQUFRK0MsbUJBQW1CL0MsR0FDOUMsTUFBTyxDQUNMZ0IsT0FBUSxTQUFnQlYsSUF6RDVCLFNBQWVzQyxFQUFjNUMsRUFBU00sR0FDcEMsSUFBSUMsRUFBTSxHQUVORCxFQUFJOUIsV0FDTitCLEdBQU8sY0FBY3RDLE9BQU9xQyxFQUFJOUIsU0FBVSxRQUd4QzhCLEVBQUloQyxRQUNOaUMsR0FBTyxVQUFVdEMsT0FBT3FDLEVBQUloQyxNQUFPLE9BR3JDLElBQUlOLE9BQWlDLElBQWRzQyxFQUFJN0IsTUFFdkJULElBQ0Z1QyxHQUFPLFNBQVN0QyxPQUFPcUMsRUFBSTdCLE1BQU1QLE9BQVMsRUFBSSxJQUFJRCxPQUFPcUMsRUFBSTdCLE9BQVMsR0FBSSxPQUc1RThCLEdBQU9ELEVBQUlDLElBRVB2QyxJQUNGdUMsR0FBTyxLQUdMRCxFQUFJaEMsUUFDTmlDLEdBQU8sS0FHTEQsRUFBSTlCLFdBQ04rQixHQUFPLEtBR1QsSUFBSUMsRUFBWUYsRUFBSUUsVUFFaEJBLEdBQTZCLG9CQUFUekIsT0FDdEJ3QixHQUFPLHVEQUF1RHRDLE9BQU9jLEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVW9CLE1BQWUsUUFNdElSLEVBQVFnRCxrQkFBa0J6QyxFQUFLcUMsRUFBYzVDLEVBQVFBLFNBa0JqRGlELENBQU1MLEVBQWM1QyxFQUFTTSxJQUUvQlksT0FBUSxZQWpCWixTQUE0QjBCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhTSxXQUNmLE9BQU8sRUFHVE4sRUFBYU0sV0FBV0MsWUFBWVAsR0FZaENRLENBQW1CUixPLFFDakR6QnRGLEVBQU9FLFFBWlAsU0FBMkIrQyxFQUFLcUMsR0FDOUIsR0FBSUEsRUFBYVMsV0FDZlQsRUFBYVMsV0FBV0MsUUFBVS9DLE1BQzdCLENBQ0wsS0FBT3FDLEVBQWFXLFlBQ2xCWCxFQUFhTyxZQUFZUCxFQUFhVyxZQUd4Q1gsRUFBYUwsWUFBWVQsU0FBUzBCLGVBQWVqRCxRQ1ZqRGtELEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJqRixJQUFqQmtGLEVBQ0gsT0FBT0EsRUFBYXBHLFFBR3JCLElBQUlGLEVBQVNtRyxFQUF5QkUsR0FBWSxDQUNqRHBHLEdBQUlvRyxFQUVKbkcsUUFBUyxJQU9WLE9BSEFxRyxFQUFvQkYsR0FBVXJHLEVBQVFBLEVBQU9FLFFBQVNrRyxHQUcvQ3BHLEVBQU9FLFFDcEJma0csRUFBb0JJLEVBQUt4RyxJQUN4QixJQUFJeUcsRUFBU3pHLEdBQVVBLEVBQU8wRyxXQUM3QixJQUFPMUcsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREFvRyxFQUFvQk8sRUFBRUYsRUFBUSxDQUFFRyxFQUFHSCxJQUM1QkEsR0NMUkwsRUFBb0JPLEVBQUksQ0FBQ3pHLEVBQVMyRyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRTdHLEVBQVM0RyxJQUM1RUUsT0FBT0MsZUFBZS9HLEVBQVM0RyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VWLEVBQW9CVyxFQUFJLENBQUMvRCxFQUFLb0UsSUFBVUosT0FBT0ssVUFBVUMsZUFBZUMsS0FBS3ZFLEVBQUtvRSxHLCtIQ1c5RTFFLEVBQVUsR0NYZCxTQUFTOEUsRUFBOEJDLEdBQ25DLElBQUlDLEVBQWMsR0FDbEIsTUFBTUMsRUFBVyxhQUNYQyxFQUFZRCxFQUFTRSxPQUFPQyxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXTCxFQUFTL0csU0FDdEUsSUFBSXFILEVBQW9CLEVBQ3hCLEtBQTRCLElBQXRCQSxHQUNlLElBQWZSLEVBQ0FRLEVBQW9CSCxLQUFLQyxNQUFzQixFQUFoQkQsS0FBS0UsVUFDZCxJQUFmUCxFQUNQUSxFQUFvQkgsS0FBS0MsTUFBc0IsRUFBaEJELEtBQUtFLFVBQ2QsSUFBZlAsRUFDUFEsRUFBb0JILEtBQUtDLE1BQXNCLEVBQWhCRCxLQUFLRSxVQUNkLElBQWZQLElBQ1BRLEVBQW9CSCxLQUFLQyxNQUFzQixHQUFoQkQsS0FBS0UsV0FHMUMsSUFBSyxJQUFJbEgsRUFBSSxFQUFHQSxFQUFJMkcsRUFBWTNHLElBQUssQ0FDakMsSUFBSW9ILEVBQVNOLEVBQVlLLEVBQ3pCUCxFQUFZM0gsS0FBS21JLEdBQ2pCRCxJQUVKLE9BQU9QLEVBNEJYLFNBQVNTLElBQ0wsT0FBT0wsS0FBS0MsTUFBc0IsRUFBaEJELEtBQUtFLFVDUjNCLFNBQVNJLEVBQVdDLEdBQ2xCLElBQUlDLEVBQWEsR0FDakJBLEVEU0YsV0FDSSxNQUFNQyxFQUFlLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUNsQyxJQUFJQyxFQUFZLEdBQ1pDLEVBQWdCLEdBRXBCLEdBQXNCLElBREZOLElBQ0ssQ0FDckIsSUFBSU8sRUFBYWxCLEVBQTZCZSxFQUFhLElBQzNEQyxFQUFVekksS0FBSzJJLEdBQ2ZBLEVBQVdDLFNBQVFDLElBQ2ZILEVBQWMxSSxLQUFLNkksVUFFcEIsQ0FDSCxJQUFJRixFQXpDWixTQUFxQ2pCLEdBQ2pDLElBQUlDLEVBQWMsR0FDbEIsTUFBTUMsRUFBVyxhQUNqQixJQUFJQyxFQUNlLElBQWZILEVBQ0FHLEVBQVlELEVBQVNFLE9BQU9DLEtBQUtDLE1BQXNCLEVBQWhCRCxLQUFLRSxXQUN0QixJQUFmUCxFQUNQRyxFQUFZRCxFQUFTRSxPQUFPQyxLQUFLQyxNQUFzQixFQUFoQkQsS0FBS0UsV0FDdEIsSUFBZlAsRUFDUEcsRUFBWUQsRUFBU0UsT0FBT0MsS0FBS0MsTUFBc0IsRUFBaEJELEtBQUtFLFdBQ3RCLElBQWZQLElBQ1BHLEVBQVlELEVBQVNFLE9BQU9DLEtBQUtDLE1BQXNCLEVBQWhCRCxLQUFLRSxZQUVoRCxJQUFJYSxFQUFZLEVBQ2hCLEtBQXFCLElBQWRBLEdBQ0hBLEVBQVlmLEtBQUtDLE1BQXNCLEdBQWhCRCxLQUFLRSxVQUVoQyxNQUFNYyxFQUFpQm5CLEVBQVNvQixNQUFNcEIsRUFBU3FCLFFBQVFwQixHQUFhRCxFQUFTcUIsUUFBUXBCLEdBQWFILEdBQ2xHLElBQUssSUFBSTNHLEVBQUksRUFBR0EsRUFBSWdJLEVBQWVsSSxPQUFRRSxJQUFLLENBQzVDLElBQUlvSCxFQUFTWSxFQUFlakIsT0FBTy9HLEdBQUsrSCxFQUN4Q25CLEVBQVkzSCxLQUFLbUksR0FFckIsT0FBT1IsRUFtQmN1QixDQUEyQlYsRUFBYSxJQUN6REMsRUFBVXpJLEtBQUsySSxHQUNmQSxFQUFXQyxTQUFRQyxJQUNmSCxFQUFjMUksS0FBSzZJLE1BRzNCLElBQUssSUFBSTlILEVBQUksRUFBR0EsRUFBSSxFQUFHQSxJQUVuQixHQUEyQixJQUREcUgsSUFDSSxDQUMxQixJQUFJZSxHQUFRLEVBQ1osTUFBaUIsSUFBVkEsR0FBZ0IsQ0FDbkIsSUFBSUMsRUFBYSxHQUNiQyxFQUFVNUIsRUFBNkJlLEVBQWF6SCxJQUN4RCxJQUFLLElBQUl1SSxFQUFJLEVBQUdBLEVBQUlELEVBQVF4SSxPQUFReUksSUFDNUJGLEVBQVdwSixLQUFLMEksRUFBY08sUUFBUUksRUFBUUMsS0FFMUQsR0FBR0YsRUFBV0csT0FBTXZGLElBQW9CLEdBQVhBLElBQWdCLENBQ3pDbUYsR0FBUSxFQUNSVixFQUFVekksS0FBS3FKLEdBQ2ZBLEVBQVFULFNBQVFDLElBQ1pILEVBQWMxSSxLQUFLNkksTUFFdkIsWUFHRCxDQUNILElBQUlNLEdBQVEsRUFDWixNQUFpQixJQUFWQSxHQUFnQixDQUNuQixJQUFJQyxFQUFhLEdBQ2JDLEVBQVU1QixFQUE2QmUsRUFBYXpILElBQ3hELElBQUssSUFBSXVJLEVBQUksRUFBR0EsRUFBSUQsRUFBUXhJLE9BQVF5SSxJQUM1QkYsRUFBV3BKLEtBQUswSSxFQUFjTyxRQUFRSSxFQUFRQyxLQUUxRCxHQUFHRixFQUFXRyxPQUFNdkYsSUFBb0IsR0FBWEEsSUFBZ0IsQ0FDekNtRixHQUFRLEVBQ1JWLEVBQVV6SSxLQUFLcUosR0FDZkEsRUFBUVQsU0FBUUMsSUFDWkgsRUFBYzFJLEtBQUs2SSxNQUV2QixRQUtaLE9BQU9KLEVDakVJZSxHQUNiLElBQUlDLEVBQVksQ0FBQyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQzdCLElBQUssSUFBSTFJLEVBQUksRUFBR0EsRUFBSSxFQUFHQSxJQUNuQnVILEVBQVVvQixVQUFVRCxFQUFVMUksR0FBSXdILEVBQVd4SCxJQUVqRCxPQUFPd0gsRUNqRFQsU0FBU29CLElBQ1AsTUFBTyxDQUNIQyxhQUFjLEdBQ2RDLE9BQVEsV0FDSCxJQUFJQyxFQUNBWCxHQUFRLEVBQ1osTUFBaUIsSUFBVkEsR0FFTixHQURBVyxFQUFlQyxLQUNtQyxJQUE5Q3hKLEtBQUtxSixhQUFhWCxRQUFRYSxHQUF3QixDQUNsRHZKLEtBQUtxSixhQUFhNUosS0FBSzhKLEdBQ3ZCWCxHQUFRLEVBQ1IsTUFHSixPQUFPVyxJQUtuQixTQUFTQyxJQUNMLE1BQU1uQyxFQUFXLGFBQ1hrQixFQUFZLENBQUMsSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssTUFHaEUsT0FGa0JsQixFQUFTRSxPQUFPQyxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXTCxFQUFTL0csU0FDcERpSSxFQUFVZixLQUFLQyxNQUFNRCxLQUFLRSxTQUFXYSxFQUFVakksU0NyQnJFLFNBQVNtSixFQUF1QjdCLEdBQzFCLElBQUssSUFBSXBILEVBQUksRUFBR0EsRUFBSW9ILEVBQU90SCxPQUFRRSxJQUMvQm9ILEVBQU9wSCxHQUFHNkgsU0FBUUMsSUFDQ3BFLFNBQVN3Rix1QkFBdUIsZUFBZXBCLEtBQ3ZELEdBQUd2RSxNQUFNNEYsZ0JBQWtCLGFBeUVoRCxTQUFTQyxFQUFvQkMsRUFBZWpDLEVBQVFrQyxHQUNoRCxJQUFJQyxFQUFTN0YsU0FBU3dGLHVCQUF1QixVQUFVSSxLQUFRbEMsS0FDMUMsS0FBakJpQyxHQUNBRSxFQUFPLEdBQUdDLFlBQWMsSUFDeEJELEVBQU8sR0FBR2hHLE1BQU00RixnQkFBa0IsVUFDbENJLEVBQU8sR0FBR0UsVUFBVUMsSUFBSSxhQUV4QmhHLFNBQVNpRyxlQUFlLGdCQUFnQkgsWUFBYyxRQUN0REQsRUFBTyxHQUFHQyxZQUFjLElBQ3hCRCxFQUFPLEdBQUdoRyxNQUFNNEYsZ0JBQWtCLFVBQ2xDSSxFQUFPLEdBQUdFLFVBQVVDLElBQUksWUFJaEMsU0FBU0UsRUFBcUJDLEVBQWFDLEdBQ3ZDLElBQUlDLEVBQWVGLEVBQVlHLGdCQUMzQkMsRUFBaUJILEVBQWNFLGlCQUNkLElBQWpCRCxJQUE0QyxJQUFuQkUsR0FDUHZHLFNBQVN3RyxpQkFBaUIsU0FDaENyQyxTQUFRMEIsSUFDaEJBLEVBQU9FLFVBQVVDLElBQUksY0FHckJoRyxTQUFTaUcsZUFBZSxnQkFBZ0JILGFBRHZCLElBQWpCTyxFQUNzRCx1REFFQSx1REFHMURyRyxTQUFTaUcsZUFBZSxnQkFBZ0JILFlBQWMsd0JKOUY5RDVILEVBQVFnRCxrQkFBb0IsSUFDNUJoRCxFQUFRMEMsY0FBZ0IsSUFFbEIxQyxFQUFRMEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MxQixFQUFRZSxPQUFTLElBQ2pCZixFQUFRK0MsbUJBQXFCLElBRWhCLElBQUksSUFBUy9DLEdBS0osS0FBVyxZQUFpQixXS3JCL0JnSCxJQUFuQixNQUNNdUIsRUFBaUJ2QixJQUNqQndCLEVISEcsQ0FDSEMsTUFBTyxHQUNQQyxjQUFlLEdBQ2YzQixVQUFXLFNBQVNoQyxFQUFZQyxHQUU1QixPQURBcEgsS0FBSzZLLE1BQU1wTCxLSVBWLENBQUNhLE9KTzBCNkcsRUlOMUJTLE9KTXNDUixFSUx0QzJELElBQUssU0FBU0MsR0FDWixNQUFNQyxFQUFXakwsS0FBSzRILE9BQU9jLFFBQVFzQyxHQUVyQyxPQURBaEwsS0FBSzRILE9BQU9xRCxHQUFZLElBQ2pCakwsS0FBSzRILFFBRWRzRCxPQUFRLFdBQ04sT0FBS2xMLEtBQUs0SCxPQUFPdUQsUUFBTzdDLEdBQW1CLE1BQVZBLElBQXFCLFNBQU10SSxLQUFLTSxVSkE5RE4sS0FBSzZLLE9BRWhCTyxjQUFlLFNBQVNoRSxHQUN0QixJQUFJeUIsRUFBYSxHQUNqQixJQUFLLElBQUlySSxFQUFJLEVBQUdBLEVBQUlSLEtBQUs2SyxNQUFNdkssT0FBUUUsSUFBSyxDQUMxQyxJQUFJNkssRUFBYXJMLEtBQUs2SyxNQUFNckssR0FBR29ILE9BQU9jLFFBQVF0QixHQUM5Q3lCLEVBQVdwSixLQUFLNEwsR0FFbEIsSUFBSUosRUFBV3BDLEVBQVd5QyxXQUFVN0gsSUFBcUIsSUFBWkEsSUFDekMsT0FBZ0IsR0FBYndILEdBQ0RqTCxLQUFLOEssY0FBY3JMLEtBQUsySCxHQUNqQixTQUVUcEgsS0FBSzZLLE1BQU1JLEdBQVVyRCxPQUFPaUIsRUFBV29DLElBQWEsSUFDN0MsTUFHYlQsY0FBZSxXQUNiLElBQUkzQixFQUFhLEdBQ2pCLElBQUssSUFBSXJJLEVBQUksRUFBR0EsRUFBSVIsS0FBSzZLLE1BQU12SyxPQUFRRSxJQUNyQyxJQUFLLElBQUk4RixFQUFJLEVBQUdBLEVBQUl0RyxLQUFLNkssTUFBTXJLLEdBQUdvSCxPQUFPdEgsT0FBUWdHLElBQ2pEdUMsRUFBV3BKLEtBQUtPLEtBQUs2SyxNQUFNckssR0FBR29ILE9BQU90QixJQUd2QyxPQUFnRCxJQUE3Q3VDLEVBQVdHLE9BQU1WLEdBQW1CLE1BQVZBLE1HekIvQmdDLEVISkcsQ0FDSE8sTUFBTyxHQUNQQyxjQUFlLEdBQ2YzQixVQUFXLFNBQVNoQyxFQUFZQyxHQUU1QixPQURBcEgsS0FBSzZLLE1BQU1wTCxLSVBWLENBQUNhLE9KTzBCNkcsRUlOMUJTLE9KTXNDUixFSUx0QzJELElBQUssU0FBU0MsR0FDWixNQUFNQyxFQUFXakwsS0FBSzRILE9BQU9jLFFBQVFzQyxHQUVyQyxPQURBaEwsS0FBSzRILE9BQU9xRCxHQUFZLElBQ2pCakwsS0FBSzRILFFBRWRzRCxPQUFRLFdBQ04sT0FBS2xMLEtBQUs0SCxPQUFPdUQsUUFBTzdDLEdBQW1CLE1BQVZBLElBQXFCLFNBQU10SSxLQUFLTSxVSkE5RE4sS0FBSzZLLE9BRWhCTyxjQUFlLFNBQVNoRSxHQUN0QixJQUFJeUIsRUFBYSxHQUNqQixJQUFLLElBQUlySSxFQUFJLEVBQUdBLEVBQUlSLEtBQUs2SyxNQUFNdkssT0FBUUUsSUFBSyxDQUMxQyxJQUFJNkssRUFBYXJMLEtBQUs2SyxNQUFNckssR0FBR29ILE9BQU9jLFFBQVF0QixHQUM5Q3lCLEVBQVdwSixLQUFLNEwsR0FFbEIsSUFBSUosRUFBV3BDLEVBQVd5QyxXQUFVN0gsSUFBcUIsSUFBWkEsSUFDekMsT0FBZ0IsR0FBYndILEdBQ0RqTCxLQUFLOEssY0FBY3JMLEtBQUsySCxHQUNqQixTQUVUcEgsS0FBSzZLLE1BQU1JLEdBQVVyRCxPQUFPaUIsRUFBV29DLElBQWEsSUFDN0MsTUFHYlQsY0FBZSxXQUNiLElBQUkzQixFQUFhLEdBQ2pCLElBQUssSUFBSXJJLEVBQUksRUFBR0EsRUFBSVIsS0FBSzZLLE1BQU12SyxPQUFRRSxJQUNyQyxJQUFLLElBQUk4RixFQUFJLEVBQUdBLEVBQUl0RyxLQUFLNkssTUFBTXJLLEdBQUdvSCxPQUFPdEgsT0FBUWdHLElBQ2pEdUMsRUFBV3BKLEtBQUtPLEtBQUs2SyxNQUFNckssR0FBR29ILE9BQU90QixJQUd2QyxPQUFnRCxJQUE3Q3VDLEVBQVdHLE9BQU1WLEdBQW1CLE1BQVZBLE1FdEJyQyxJQUFzQlAsRUNBdEIwQixFQUR1QjNCLEVBQVU4QyxJQUVqQzlDLEVBQVV3QyxHRERZdkMsRUNFVjZDLEVERFkxRyxTQUFTaUcsZUFBZSxnQkFDaENvQixpQkFBaUIsU0FBUyxLQUN0QnJILFNBQVN3RyxpQkFBaUIsU0FDbENyQyxTQUFRMEIsSUFDWkEsRUFBT2hHLE1BQU00RixnQkFBa0IsTUFFbkM1QixFQUFVOEMsTUFBUSxHQUVsQnBCLEVBRG1CM0IsRUFBVUMsT0FLakMsU0FBMEJBLEVBQVc0QyxFQUFnQk4sR0FDakQsTUFBTW1CLEVBQWN0SCxTQUFTaUcsZUFBZSxnQkFDNUNxQixFQUFZRCxpQkFBaUIsU0FBUyxLQUNsQ3JILFNBQVNpRyxlQUFlLGdCQUFnQkgsWUFBYyxnRUFDbEM5RixTQUFTaUcsZUFBZSxnQkFDaENzQixVQUFXLEVBQ0x2SCxTQUFTd0csaUJBQWlCLFNBQ2hDckMsU0FBUTBCLElBQ2hCLE1BQU16QixFQUFReUIsRUFBTzJCLFVBQVVDLE1BQU0sS0FBSyxHQUMxQzVCLEVBQU93QixpQkFBaUIsU0FBUyxNQVE3QyxTQUFxQmpELEVBQU9nQyxFQUFlSyxFQUFnQk4sR0FDdkQsSUFBSVIsRUFBZ0JTLEVBQWNjLGNBQWM5QyxHQUM1Q3lCLEVBQVM3RixTQUFTd0YsdUJBQXVCLGVBQWVwQixLQUN2QyxLQUFqQnVCLEdBQ0FFLEVBQU8sR0FBR0MsWUFBYSxJQUN2QkQsRUFBTyxHQUFHaEcsTUFBTTRGLGdCQUFrQixVQUNsQ0ksRUFBTyxHQUFHRSxVQUFVQyxJQUFJLFdBQ3hCRSxFQUFxQkMsRUFBYUMsS0FFbENwRyxTQUFTaUcsZUFBZSxnQkFBZ0JILFlBQWMsUUFDdERELEVBQU8sR0FBR0MsWUFBYSxJQUN2QkQsRUFBTyxHQUFHaEcsTUFBTTRGLGdCQUFrQixVQUNsQ0ksRUFBTyxHQUFHRSxVQUFVQyxJQUFJLFdBS2hDLFNBQXVCUyxFQUFnQmlCLEVBQWV0QixHQUNsRHBHLFNBQVNpRyxlQUFlLGdCQUFnQkgsWUFBYyxxQkFDdEQsSUFBSTFCLEVBQVFxQyxFQUFlckIsU0FDdkJPLEVBQWdCK0IsRUFBY1IsY0FBYzlDLEdBS2hELElBSkF1RCxZQUFXLFdBQ1hqQyxFQUFvQkMsRUFBZXZCLEVBQU8sUUFDMUM4QixFQUFxQndCLEVBQWV0QixLQUNqQyxLQUNzQixNQUFsQlQsR0FNSCxHQUxBTyxFQUFxQndCLEVBQWV0QixHQUNwQ2hDLEVBQVFxQyxFQUFlckIsU0FDdkJPLEVBQWdCK0IsRUFBY1IsY0FBYzlDLEdBQzVDc0IsRUFBb0JDLEVBQWV2QixFQUFPLFFBQzFDOEIsRUFBcUJ3QixFQUFldEIsR0FDZCxNQUFsQlQsRUFBdUIsQ0FDdkIzRixTQUFTaUcsZUFBZSxnQkFBZ0JILFlBQWMsYUFDdEQsT0FwQko4QixDQUFhbkIsRUFBZ0JOLEVBQWFDLElBcEJsQ3lCLENBQVd6RCxFQUFPUCxFQUFXNEMsRUFBZ0JOLFNBR3JEbUIsRUFBWUMsVUFBVyxLQ3ZCL0JPLENBQWdCMUIsRUFBZUssRUFBZ0JDLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zaGlwcGxhY2VtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcGxheWVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvRE9NLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zaGlwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgICAtLWdyaWQtY29sb3I6IHJnYigxNDEsIDE0MCwgMTQwKTtcXG4gICAgLS10ZXh0LWNvbG9yOiByZ2IoMTEwLCAxMDksIDEwOSk7XFxufVxcblxcbioge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxufVxcblxcbmJvZHkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI4LCAyMjgsIDI1Myk7XFxufVxcblxcbmgxLFxcbmgzIHtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpO1xcbn1cXG5cXG5oMSxcXG4jaW5zdHJ1Y3Rpb25zIHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgICBtYXJnaW46IDJyZW07XFxuICAgIG1hcmdpbi1sZWZ0OiAzcmVtO1xcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcXG59XFxuXFxuLnNxdWFyZSB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyaWQtY29sb3IpO1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIHdpZHRoOiAycmVtO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5jb29yZHMge1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBjb2xvcjogdmFyKC0tZ3JpZC1jb2xvcik7XFxufVxcblxcbiNpbnN0cnVjdGlvbnMge1xcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXG59XFxuXFxuI2JvYXJkLW4tbWVudSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbiN1c2VyLWdhbWVib2FyZCxcXG4jY29tcHV0ZXItZ2FtZWJvYXJkIHtcXG4gICAgbWFyZ2luOiAyLjUlO1xcbiAgICB3aWR0aDogNDUlO1xcbn1cXG5cXG4jYm9hcmRzLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbiN1c2VyLWJvYXJkLFxcbiNjb21wdXRlci1ib2FyZCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDExLCAxZnIpO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMSwgMWZyKTtcXG4gICAgd2lkdGg6IDIzcmVtO1xcbn1cXG5cXG4ubm9jbGljayB7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4ubm9jbGlja09wcCB7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksZ0NBQWdDO0lBQ2hDLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLFVBQVU7SUFDVixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUE7O0lBRUksYUFBYTtJQUNiLHdCQUF3QjtBQUM1Qjs7QUFFQTs7SUFFSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLG1DQUFtQztJQUNuQyxZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQix3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTs7SUFFSSxZQUFZO0lBQ1osVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTs7SUFFSSxhQUFhO0lBQ2Isc0NBQXNDO0lBQ3RDLG1DQUFtQztJQUNuQyxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gICAgLS1ncmlkLWNvbG9yOiByZ2IoMTQxLCAxNDAsIDE0MCk7XFxuICAgIC0tdGV4dC1jb2xvcjogcmdiKDExMCwgMTA5LCAxMDkpO1xcbn1cXG5cXG4qIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyOCwgMjI4LCAyNTMpO1xcbn1cXG5cXG5oMSxcXG5oMyB7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuaDEsXFxuI2luc3RydWN0aW9ucyB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuYnV0dG9uIHtcXG4gICAgbWFyZ2luOiAycmVtO1xcbiAgICBtYXJnaW4tbGVmdDogM3JlbTtcXG4gICAgcGFkZGluZzogMC41cmVtIDFyZW07XFxufVxcblxcbi5zcXVhcmUge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmlkLWNvbG9yKTtcXG4gICAgaGVpZ2h0OiAycmVtO1xcbiAgICB3aWR0aDogMnJlbTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4uY29vcmRzIHtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgY29sb3I6IHZhcigtLWdyaWQtY29sb3IpO1xcbn1cXG5cXG4jaW5zdHJ1Y3Rpb25zIHtcXG4gICAgaGVpZ2h0OiAxLjVyZW07XFxufVxcblxcbiNib2FyZC1uLW1lbnUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4jdXNlci1nYW1lYm9hcmQsXFxuI2NvbXB1dGVyLWdhbWVib2FyZCB7XFxuICAgIG1hcmdpbjogMi41JTtcXG4gICAgd2lkdGg6IDQ1JTtcXG59XFxuXFxuI2JvYXJkcy1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4jdXNlci1ib2FyZCxcXG4jY29tcHV0ZXItYm9hcmQge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMSwgMWZyKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTEsIDFmcik7XFxuICAgIHdpZHRoOiAyM3JlbTtcXG59XFxuXFxuLm5vY2xpY2sge1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuXFxuLm5vY2xpY2tPcHAge1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZnVuY3Rpb24gZ2VuZXJhdGVTaGlwQ29vcmRzSG9yaXpvbnRhbCAoc2hpcExlbmd0aCkge1xuICAgIGxldCBjb29yZGluYXRlcyA9IFtdO1xuICAgIGNvbnN0IGxhdGl0dWRlID0gJ0FCQ0RFRkdISUonO1xuICAgIGNvbnN0IHJhbmRvbUxhdCA9IGxhdGl0dWRlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBsYXRpdHVkZS5sZW5ndGgpKTtcbiAgICBsZXQgc3RhcnRpbmdMb25naXR1ZGUgPSAwO1xuICAgIHdoaWxlKHN0YXJ0aW5nTG9uZ2l0dWRlID09PSAwKSB7XG4gICAgICBpZiAoc2hpcExlbmd0aCA9PT0gNSkge1xuICAgICAgICAgIHN0YXJ0aW5nTG9uZ2l0dWRlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNyk7XG4gICAgICB9IGVsc2UgaWYgKHNoaXBMZW5ndGggPT09IDQpIHtcbiAgICAgICAgICBzdGFydGluZ0xvbmdpdHVkZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDgpO1xuICAgICAgfSBlbHNlIGlmIChzaGlwTGVuZ3RoID09PSAzICkge1xuICAgICAgICAgIHN0YXJ0aW5nTG9uZ2l0dWRlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogOSk7XG4gICAgICB9IGVsc2UgaWYgKHNoaXBMZW5ndGggPT09IDIpIHtcbiAgICAgICAgICBzdGFydGluZ0xvbmdpdHVkZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcExlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBjb29yZHMgPSByYW5kb21MYXQgKyBzdGFydGluZ0xvbmdpdHVkZTtcbiAgICAgICAgY29vcmRpbmF0ZXMucHVzaChjb29yZHMpO1xuICAgICAgICBzdGFydGluZ0xvbmdpdHVkZSsrO1xuICAgIH1cbiAgICByZXR1cm4gY29vcmRpbmF0ZXM7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU2hpcENvb3Jkc1ZlcnRpY2FsIChzaGlwTGVuZ3RoKSB7XG4gICAgbGV0IGNvb3JkaW5hdGVzID0gW107XG4gICAgY29uc3QgbGF0aXR1ZGUgPSAnQUJDREVGR0hJSic7XG4gICAgbGV0IHJhbmRvbUxhdDtcbiAgICBpZiAoc2hpcExlbmd0aCA9PT0gNSkge1xuICAgICAgICByYW5kb21MYXQgPSBsYXRpdHVkZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNSkpO1xuICAgIH0gZWxzZSBpZiAoc2hpcExlbmd0aCA9PT0gNCkge1xuICAgICAgICByYW5kb21MYXQgPSBsYXRpdHVkZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNikpO1xuICAgIH0gZWxzZSBpZiAoc2hpcExlbmd0aCA9PT0gMykge1xuICAgICAgICByYW5kb21MYXQgPSBsYXRpdHVkZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNykpO1xuICAgIH0gZWxzZSBpZiAoc2hpcExlbmd0aCA9PT0gMikge1xuICAgICAgICByYW5kb21MYXQgPSBsYXRpdHVkZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogOCkpO1xuICAgIH1cbiAgICBsZXQgbG9uZ2l0dWRlID0gMDtcbiAgICB3aGlsZSAobG9uZ2l0dWRlID09PSAwKSB7XG4gICAgICAgIGxvbmdpdHVkZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKTtcbiAgICB9XG4gICAgY29uc3QgbGF0aXR1ZGVTdHJpbmcgPSBsYXRpdHVkZS5zbGljZShsYXRpdHVkZS5pbmRleE9mKHJhbmRvbUxhdCksIChsYXRpdHVkZS5pbmRleE9mKHJhbmRvbUxhdCkgKyBzaGlwTGVuZ3RoKSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsYXRpdHVkZVN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgY29vcmRzID0gbGF0aXR1ZGVTdHJpbmcuY2hhckF0KGkpICsgbG9uZ2l0dWRlO1xuICAgICAgICBjb29yZGluYXRlcy5wdXNoKGNvb3Jkcyk7XG4gICAgfVxuICAgIHJldHVybiBjb29yZGluYXRlcztcbn1cblxuZnVuY3Rpb24gY29pblRvc3MgKCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVBbGxTaGlwQ29vcmRzICgpIHtcbiAgICBjb25zdCBzaGlwc0xlbmd0aHMgPSBbNSwgNCwgMywgMywgMl07XG4gICAgbGV0IGFsbENvb3JkcyA9IFtdO1xuICAgIGxldCBhbGxVc2VkQ29vcmRzID0gW11cbiAgICBsZXQgZmlyc3RDb2luVG9zcyA9IGNvaW5Ub3NzKCk7XG4gICAgaWYgKGZpcnN0Q29pblRvc3MgPT09IDApIHtcbiAgICAgICAgbGV0IGZpcnN0Q29vcmQgPSBnZW5lcmF0ZVNoaXBDb29yZHNIb3Jpem9udGFsKHNoaXBzTGVuZ3Roc1swXSk7XG4gICAgICAgIGFsbENvb3Jkcy5wdXNoKGZpcnN0Q29vcmQpO1xuICAgICAgICBmaXJzdENvb3JkLmZvckVhY2goY29vcmQgPT4ge1xuICAgICAgICAgICAgYWxsVXNlZENvb3Jkcy5wdXNoKGNvb3JkKTtcbiAgICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgZmlyc3RDb29yZCA9IGdlbmVyYXRlU2hpcENvb3Jkc1ZlcnRpY2FsKHNoaXBzTGVuZ3Roc1swXSk7XG4gICAgICAgIGFsbENvb3Jkcy5wdXNoKGZpcnN0Q29vcmQpO1xuICAgICAgICBmaXJzdENvb3JkLmZvckVhY2goY29vcmQgPT4ge1xuICAgICAgICAgICAgYWxsVXNlZENvb3Jkcy5wdXNoKGNvb3JkKTtcbiAgICAgICAgfSlcbiAgICB9O1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgNTsgaSsrICkge1xuICAgICAgICBsZXQgc3Vic2VxdWVudENvaW5Ub3NzID0gIGNvaW5Ub3NzKCk7XG4gICAgICAgIGlmIChzdWJzZXF1ZW50Q29pblRvc3MgPT09IDApIHtcbiAgICAgICAgICAgIGxldCBjbGFzaCA9IHRydWU7XG4gICAgICAgICAgICB3aGlsZSAoY2xhc2ggPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBsZXQgY2hlY2tBcnJheSA9IFtdO1xuICAgICAgICAgICAgICAgIGxldCBuZXdTaGlwID0gZ2VuZXJhdGVTaGlwQ29vcmRzSG9yaXpvbnRhbChzaGlwc0xlbmd0aHNbaV0pO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgbmV3U2hpcC5sZW5ndGg7IGMrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tBcnJheS5wdXNoKGFsbFVzZWRDb29yZHMuaW5kZXhPZihuZXdTaGlwW2NdKSk7XG4gICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIGlmKGNoZWNrQXJyYXkuZXZlcnkoaW5kZXggPT4gaW5kZXggPT0gKC0xKSkpIHtcbiAgICAgICAgICAgICAgICBjbGFzaCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGFsbENvb3Jkcy5wdXNoKG5ld1NoaXApO1xuICAgICAgICAgICAgICAgIG5ld1NoaXAuZm9yRWFjaChjb29yZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGFsbFVzZWRDb29yZHMucHVzaChjb29yZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9ICAgXG4gICAgICAgICAgICB9ICBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxldCBjbGFzaCA9IHRydWU7XG4gICAgICAgICAgICB3aGlsZSAoY2xhc2ggPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBsZXQgY2hlY2tBcnJheSA9IFtdO1xuICAgICAgICAgICAgICAgIGxldCBuZXdTaGlwID0gZ2VuZXJhdGVTaGlwQ29vcmRzSG9yaXpvbnRhbChzaGlwc0xlbmd0aHNbaV0pO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgbmV3U2hpcC5sZW5ndGg7IGMrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tBcnJheS5wdXNoKGFsbFVzZWRDb29yZHMuaW5kZXhPZihuZXdTaGlwW2NdKSk7XG4gICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIGlmKGNoZWNrQXJyYXkuZXZlcnkoaW5kZXggPT4gaW5kZXggPT0gKC0xKSkpIHtcbiAgICAgICAgICAgICAgICBjbGFzaCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGFsbENvb3Jkcy5wdXNoKG5ld1NoaXApO1xuICAgICAgICAgICAgICAgIG5ld1NoaXAuZm9yRWFjaChjb29yZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGFsbFVzZWRDb29yZHMucHVzaChjb29yZCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH0gICBcbiAgICAgICAgICAgIH0gICBcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYWxsQ29vcmRzO1xufVxuXG5leHBvcnQgeyBnZW5lcmF0ZVNoaXBDb29yZHNIb3Jpem9udGFsLCBnZW5lcmF0ZVNoaXBDb29yZHNWZXJ0aWNhbCwgZ2VuZXJhdGVBbGxTaGlwQ29vcmRzIH0iLCJpbXBvcnQgeyBTaGlwRmFjdG9yeSB9IGZyb20gJy4vc2hpcC5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZUFsbFNoaXBDb29yZHMgfSBmcm9tICcuL3NoaXBwbGFjZW1lbnQuanMnOztcblxuZnVuY3Rpb24gR2FtZWJvYXJkKCkge1xuICByZXR1cm4ge1xuICAgICAgc2hpcHM6IFtdLFxuICAgICAgbWlzc2VkQXR0YWNrczogW10sXG4gICAgICBwbGFjZVNoaXA6IGZ1bmN0aW9uKHNoaXBMZW5ndGgsIGNvb3JkaW5hdGVzKSB7XG4gICAgICAgICAgdGhpcy5zaGlwcy5wdXNoKFNoaXBGYWN0b3J5KHNoaXBMZW5ndGgsIGNvb3JkaW5hdGVzKSk7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuc2hpcHM7XG4gICAgICB9LFxuICAgICAgcmVjZWl2ZUF0dGFjazogZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICAgICAgbGV0IGNoZWNrQXJyYXkgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNoaXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgbGV0IGNvb3JkSW5kZXggPSB0aGlzLnNoaXBzW2ldLmNvb3Jkcy5pbmRleE9mKGNvb3JkaW5hdGVzKTtcbiAgICAgICAgICBjaGVja0FycmF5LnB1c2goY29vcmRJbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGhpdENvb3JkID0gY2hlY2tBcnJheS5maW5kSW5kZXgoaW5kZXggPT4gaW5kZXggIT09ICgtMSkpO1xuICAgICAgICAgICAgaWYoaGl0Q29vcmQgPT0gLTEpe1xuICAgICAgICAgICAgICB0aGlzLm1pc3NlZEF0dGFja3MucHVzaChjb29yZGluYXRlcyk7XG4gICAgICAgICAgICAgIHJldHVybiAnbWlzcyc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zaGlwc1toaXRDb29yZF0uY29vcmRzW2NoZWNrQXJyYXlbaGl0Q29vcmRdXSA9ICd4JztcbiAgICAgICAgICAgIHJldHVybiAneCc7XG4gICAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNoZWNrR2FtZU92ZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgY2hlY2tBcnJheSA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2hpcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBmb3IgKGxldCBhID0gMDsgYSA8IHRoaXMuc2hpcHNbaV0uY29vcmRzLmxlbmd0aDsgYSsrKXtcbiAgICAgICAgICBjaGVja0FycmF5LnB1c2godGhpcy5zaGlwc1tpXS5jb29yZHNbYV0pOyBcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlmKGNoZWNrQXJyYXkuZXZlcnkoY29vcmQgPT4gY29vcmQgPT09ICd4JykgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBzaGlwU2V0dXAgKGdhbWVib2FyZCkge1xuICBsZXQgc2hpcENvb3JkcyA9IFtdXG4gIHNoaXBDb29yZHMgPSBnZW5lcmF0ZUFsbFNoaXBDb29yZHMoKTtcbiAgbGV0IHNoaXBTaXplcyA9IFs1LCA0ICwzLCAzLCAyXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgIGdhbWVib2FyZC5wbGFjZVNoaXAoc2hpcFNpemVzW2ldLCBzaGlwQ29vcmRzW2ldKTtcbiAgfVxuICByZXR1cm4gc2hpcENvb3Jkcztcbn07XG5cbmV4cG9ydCB7IEdhbWVib2FyZCwgc2hpcFNldHVwIH0iLCJmdW5jdGlvbiBQbGF5ZXIoKSB7XG4gIHJldHVybiB7XG4gICAgICBjaG9zZW5Db29yZHM6IFtdLFxuICAgICAgYXR0YWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgbGV0IGF0dGFja0Nvb3JkcztcbiAgICAgICAgICAgbGV0IGNsYXNoID0gdHJ1ZVxuICAgICAgICAgICB3aGlsZSAoY2xhc2ggPT09IHRydWUpIHtcbiAgICAgICAgICAgIGF0dGFja0Nvb3JkcyA9IGdlbmVyYXRlQXR0YWNrQ29vcmRzKCk7IFxuICAgICAgICAgICAgaWYgKHRoaXMuY2hvc2VuQ29vcmRzLmluZGV4T2YoYXR0YWNrQ29vcmRzKSA9PT0gKC0xKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hvc2VuQ29vcmRzLnB1c2goYXR0YWNrQ29vcmRzKTtcbiAgICAgICAgICAgICAgICBjbGFzaCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGF0dGFja0Nvb3JkcztcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG5mdW5jdGlvbiBnZW5lcmF0ZUF0dGFja0Nvb3JkcyAoKSB7XG4gICAgY29uc3QgbGF0aXR1ZGUgPSAnQUJDREVGR0hJSic7XG4gICAgY29uc3QgbG9uZ2l0dWRlID0gWycxJywgJzInLCAnMycsICc0JywgJzUnLCAnNicsICc3JywgJzgnLCAnOScsICcxMCddO1xuICAgIGNvbnN0IHJhbmRvbUxhdCA9IGxhdGl0dWRlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBsYXRpdHVkZS5sZW5ndGgpKTtcbiAgICBjb25zdCByYW5kb21Mb24gPSBsb25naXR1ZGVbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbG9uZ2l0dWRlLmxlbmd0aCldO1xuICAgIHJldHVybiByYW5kb21MYXQgKyByYW5kb21Mb247XG59XG5cbmV4cG9ydCB7IFBsYXllciB9IiwiaW1wb3J0IHsgc2hpcFNldHVwIH0gZnJvbSAnLi9nYW1lYm9hcmQuanMnO1xuXG5mdW5jdGlvbiB1cGRhdGVVc2VyU2hpcERpc3BsYXkgKGNvb3Jkcykge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBjb29yZHNbaV0uZm9yRWFjaChjb29yZCA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYHNxdWFyZSB1c2VyICR7Y29vcmR9YCk7XG4gICAgICAgICAgICAgIHNxdWFyZVswXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzQ4M2Q4Yic7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG59O1xuXG5mdW5jdGlvbiByZXNldEJ1dHRvbiAoZ2FtZWJvYXJkKSB7XG4gICAgY29uc3QgcmVzZXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzZXQtYnV0dG9uJyk7XG4gICAgcmVzZXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgY29uc3Qgc3F1YXJlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy51c2VyJyk7XG4gICAgc3F1YXJlcy5mb3JFYWNoKHNxdWFyZSA9PiB7XG4gICAgICAgIHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcbiAgICB9KVxuICAgIGdhbWVib2FyZC5zaGlwcyA9IFtdO1xuICAgIGNvbnN0IHNoaXBDb29yZHMgPSBzaGlwU2V0dXAoZ2FtZWJvYXJkKTtcbiAgICB1cGRhdGVVc2VyU2hpcERpc3BsYXkoc2hpcENvb3Jkcyk7XG59KVxufTtcblxuZnVuY3Rpb24gc3RhcnRHYW1lQnV0dG9uIChnYW1lYm9hcmQsIGNvbXB1dGVyUGxheWVyLCBwbGF5ZXJCb2FyZCkge1xuICAgIGNvbnN0IGJlZ2luQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JlZ2luLWJ1dHRvbicpO1xuICAgIGJlZ2luQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5zdHJ1Y3Rpb25zJykudGV4dENvbnRlbnQgPSAnWW91ciB0dXJuISBDbGljayBvbiBhIHNxdWFyZSBvbiB0aGUgb3Bwb25lbnRcXCdzIGdyaWQgdG8gYmVnaW4uJztcbiAgICAgICAgY29uc3QgcmVzZXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzZXQtYnV0dG9uJyk7XG4gICAgICAgIHJlc2V0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgbGV0IGNvbXBTcXVhcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbXAnKVxuICAgICAgICBjb21wU3F1YXJlcy5mb3JFYWNoKHNxdWFyZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb29yZCA9IHNxdWFyZS5jbGFzc05hbWUuc3BsaXQoJyAnKVsyXTtcbiAgICAgICAgICAgIHNxdWFyZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICBhdHRhY2tMb29wKGNvb3JkLCBnYW1lYm9hcmQsIGNvbXB1dGVyUGxheWVyLCBwbGF5ZXJCb2FyZClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgYmVnaW5CdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0pO1xufTtcblxuZnVuY3Rpb24gYXR0YWNrTG9vcCAoY29vcmQsIGNvbXB1dGVyQm9hcmQsIGNvbXB1dGVyUGxheWVyLCBwbGF5ZXJCb2FyZCkge1xuICAgIGxldCBhdHRhY2tPdXRjb21lID0gY29tcHV0ZXJCb2FyZC5yZWNlaXZlQXR0YWNrKGNvb3JkKTtcbiAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShgc3F1YXJlIGNvbXAgJHtjb29yZH1gKTtcbiAgICBpZiAoYXR0YWNrT3V0Y29tZSA9PSAneCcpIHtcbiAgICAgICAgc3F1YXJlWzBdLnRleHRDb250ZW50ID0n4p2MJztcbiAgICAgICAgc3F1YXJlWzBdLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMDAwMDY3JztcbiAgICAgICAgc3F1YXJlWzBdLmNsYXNzTGlzdC5hZGQoJ25vY2xpY2snKTtcbiAgICAgICAgY2hlY2tHYW1lT3Zlck1lc3NhZ2UocGxheWVyQm9hcmQsIGNvbXB1dGVyQm9hcmQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnN0cnVjdGlvbnMnKS50ZXh0Q29udGVudCA9ICdNaXNzISc7XG4gICAgICAgIHNxdWFyZVswXS50ZXh0Q29udGVudCA9J+KXjyc7XG4gICAgICAgIHNxdWFyZVswXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnI2E2YTZhNic7XG4gICAgICAgIHNxdWFyZVswXS5jbGFzc0xpc3QuYWRkKCdub2NsaWNrJyk7XG4gICAgICAgIGNvbXB1dGVyVHVybihjb21wdXRlclBsYXllciwgcGxheWVyQm9hcmQsIGNvbXB1dGVyQm9hcmQpO1xuICAgIH1cbn07XG5cbmZ1bmN0aW9uIGNvbXB1dGVyVHVybiAoY29tcHV0ZXJQbGF5ZXIsIHVzZXJHYW1lYm9hcmQsIGNvbXB1dGVyQm9hcmQpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5zdHJ1Y3Rpb25zJykudGV4dENvbnRlbnQgPSAnT3Bwb25lbnRcXCdzIHR1cm4uLi4nO1xuICAgIGxldCBjb29yZCA9IGNvbXB1dGVyUGxheWVyLmF0dGFjaygpO1xuICAgIGxldCBhdHRhY2tPdXRjb21lID0gdXNlckdhbWVib2FyZC5yZWNlaXZlQXR0YWNrKGNvb3JkKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZUF0dGFja0Rpc3BsYXkoYXR0YWNrT3V0Y29tZSwgY29vcmQsICd1c2VyJyk7XG4gICAgY2hlY2tHYW1lT3Zlck1lc3NhZ2UodXNlckdhbWVib2FyZCwgY29tcHV0ZXJCb2FyZCk7XG4gICAgfSwgMTAwMCk7XG4gICAgd2hpbGUgKGF0dGFja091dGNvbWUgPT09ICd4Jykge1xuICAgICAgICBjaGVja0dhbWVPdmVyTWVzc2FnZSh1c2VyR2FtZWJvYXJkLCBjb21wdXRlckJvYXJkKTtcbiAgICAgICAgY29vcmQgPSBjb21wdXRlclBsYXllci5hdHRhY2soKTtcbiAgICAgICAgYXR0YWNrT3V0Y29tZSA9IHVzZXJHYW1lYm9hcmQucmVjZWl2ZUF0dGFjayhjb29yZCk7XG4gICAgICAgIHVwZGF0ZUF0dGFja0Rpc3BsYXkoYXR0YWNrT3V0Y29tZSwgY29vcmQsICd1c2VyJyk7XG4gICAgICAgIGNoZWNrR2FtZU92ZXJNZXNzYWdlKHVzZXJHYW1lYm9hcmQsIGNvbXB1dGVyQm9hcmQpO1xuICAgICAgICBpZiAoYXR0YWNrT3V0Y29tZSAhPT0gJ3gnKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5zdHJ1Y3Rpb25zJykudGV4dENvbnRlbnQgPSAnWW91ciB0dXJuISc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlQXR0YWNrRGlzcGxheShhdHRhY2tPdXRjb21lLCBjb29yZHMsIHVzZXIpIHtcbiAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShgc3F1YXJlICR7dXNlcn0gJHtjb29yZHN9YCk7XG4gICAgaWYgKGF0dGFja091dGNvbWUgPT0gJ3gnKSB7XG4gICAgICAgIHNxdWFyZVswXS50ZXh0Q29udGVudCA9ICfinYwnO1xuICAgICAgICBzcXVhcmVbMF0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyMwMDAwNjcnO1xuICAgICAgICBzcXVhcmVbMF0uY2xhc3NMaXN0LmFkZCgnbm9jbGljaycpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnN0cnVjdGlvbnMnKS50ZXh0Q29udGVudCA9ICdNaXNzISc7XG4gICAgICAgIHNxdWFyZVswXS50ZXh0Q29udGVudCA9ICfil48nO1xuICAgICAgICBzcXVhcmVbMF0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNhNmE2YTYnO1xuICAgICAgICBzcXVhcmVbMF0uY2xhc3NMaXN0LmFkZCgnbm9jbGljaycpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tHYW1lT3Zlck1lc3NhZ2UocGxheWVyQm9hcmQsIGNvbXB1dGVyQm9hcmQpIHtcbiAgICBsZXQgcGxheWVyUmVzdWx0ID0gcGxheWVyQm9hcmQuY2hlY2tHYW1lT3ZlcigpO1xuICAgIGxldCBjb21wdXRlclJlc3VsdCA9IGNvbXB1dGVyQm9hcmQuY2hlY2tHYW1lT3ZlcigpO1xuICAgIGlmIChwbGF5ZXJSZXN1bHQgPT09IHRydWUgfHwgY29tcHV0ZXJSZXN1bHQgPT09IHRydWUpIHtcbiAgICAgICAgbGV0IGNvbXBTcXVhcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbXAnKTtcbiAgICAgICAgY29tcFNxdWFyZXMuZm9yRWFjaChzcXVhcmUgPT4ge1xuICAgICAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ25vY2xpY2snKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBpZiAocGxheWVyUmVzdWx0ID09PSB0cnVlKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5zdHJ1Y3Rpb25zJykudGV4dENvbnRlbnQgPSAnR2FtZSBPdmVyISBZb3UgbG9zZSEgUmVmcmVzaCB0aGUgcGFnZSB0byBwbGF5IGFnYWluLic7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5zdHJ1Y3Rpb25zJykudGV4dENvbnRlbnQgPSAnR2FtZSBPdmVyISBZb3Ugd2luISBSZWZyZXNoIHRoZSBwYWdlIHRvIHBsYXkgYWdhaW4uJztcbiAgICB9IFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnN0cnVjdGlvbnMnKS50ZXh0Q29udGVudCA9ICdZb3UgZ2V0IGFub3RoZXIgdHVybi4nO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgdXBkYXRlVXNlclNoaXBEaXNwbGF5LCByZXNldEJ1dHRvbiwgc3RhcnRHYW1lQnV0dG9uIH1cblxuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcydcbmltcG9ydCB7IEdhbWVib2FyZCwgc2hpcFNldHVwIH0gZnJvbSAnLi9nYW1lYm9hcmQuanMnO1xuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAnLi9wbGF5ZXIuanMnO1xuaW1wb3J0IHsgdXBkYXRlVXNlclNoaXBEaXNwbGF5LCByZXNldEJ1dHRvbiwgc3RhcnRHYW1lQnV0dG9uIH0gZnJvbSAnLi9ET00uanMnO1xuXG5jb25zdCB1c2VyUGxheWVyID0gUGxheWVyKCk7XG5jb25zdCBjb21wdXRlclBsYXllciA9IFBsYXllcigpO1xuY29uc3QgdXNlckJvYXJkID0gR2FtZWJvYXJkKCk7IFxuY29uc3QgY29tcHV0ZXJCb2FyZCA9IEdhbWVib2FyZCgpO1xuXG5jb25zdCB1c2VyU2hpcENvb3JkcyA9IHNoaXBTZXR1cCh1c2VyQm9hcmQpO1xudXBkYXRlVXNlclNoaXBEaXNwbGF5KHVzZXJTaGlwQ29vcmRzKTtcbnNoaXBTZXR1cChjb21wdXRlckJvYXJkKTtcbnJlc2V0QnV0dG9uKHVzZXJCb2FyZCk7XG5zdGFydEdhbWVCdXR0b24oY29tcHV0ZXJCb2FyZCwgY29tcHV0ZXJQbGF5ZXIsIHVzZXJCb2FyZCk7IiwiZnVuY3Rpb24gU2hpcEZhY3RvcnkobGVuZ3RoLCBjb29yZHMpIHtcbiAgICByZXR1cm4ge2xlbmd0aCxcbiAgICAgICAgICAgIGNvb3JkcyxcbiAgICAgICAgICAgIGhpdDogZnVuY3Rpb24oY29vcmRpbmF0ZSkge1xuICAgICAgICAgICAgICBjb25zdCBoaXRDb29yZCA9IHRoaXMuY29vcmRzLmluZGV4T2YoY29vcmRpbmF0ZSk7XG4gICAgICAgICAgICAgIHRoaXMuY29vcmRzW2hpdENvb3JkXSA9ICd4JztcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29vcmRzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzU3VuazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIGlmICgodGhpcy5jb29yZHMuZmlsdGVyKGNvb3JkID0+IGNvb3JkID09PSAneCcpLmxlbmd0aCkgPT09IHRoaXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgIH0gcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBTaGlwRmFjdG9yeSB9XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImdlbmVyYXRlU2hpcENvb3Jkc0hvcml6b250YWwiLCJzaGlwTGVuZ3RoIiwiY29vcmRpbmF0ZXMiLCJsYXRpdHVkZSIsInJhbmRvbUxhdCIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInN0YXJ0aW5nTG9uZ2l0dWRlIiwiY29vcmRzIiwiY29pblRvc3MiLCJzaGlwU2V0dXAiLCJnYW1lYm9hcmQiLCJzaGlwQ29vcmRzIiwic2hpcHNMZW5ndGhzIiwiYWxsQ29vcmRzIiwiYWxsVXNlZENvb3JkcyIsImZpcnN0Q29vcmQiLCJmb3JFYWNoIiwiY29vcmQiLCJsb25naXR1ZGUiLCJsYXRpdHVkZVN0cmluZyIsInNsaWNlIiwiaW5kZXhPZiIsImdlbmVyYXRlU2hpcENvb3Jkc1ZlcnRpY2FsIiwiY2xhc2giLCJjaGVja0FycmF5IiwibmV3U2hpcCIsImMiLCJldmVyeSIsImdlbmVyYXRlQWxsU2hpcENvb3JkcyIsInNoaXBTaXplcyIsInBsYWNlU2hpcCIsIlBsYXllciIsImNob3NlbkNvb3JkcyIsImF0dGFjayIsImF0dGFja0Nvb3JkcyIsImdlbmVyYXRlQXR0YWNrQ29vcmRzIiwidXBkYXRlVXNlclNoaXBEaXNwbGF5IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImJhY2tncm91bmRDb2xvciIsInVwZGF0ZUF0dGFja0Rpc3BsYXkiLCJhdHRhY2tPdXRjb21lIiwidXNlciIsInNxdWFyZSIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiZ2V0RWxlbWVudEJ5SWQiLCJjaGVja0dhbWVPdmVyTWVzc2FnZSIsInBsYXllckJvYXJkIiwiY29tcHV0ZXJCb2FyZCIsInBsYXllclJlc3VsdCIsImNoZWNrR2FtZU92ZXIiLCJjb21wdXRlclJlc3VsdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb21wdXRlclBsYXllciIsInVzZXJCb2FyZCIsInNoaXBzIiwibWlzc2VkQXR0YWNrcyIsImhpdCIsImNvb3JkaW5hdGUiLCJoaXRDb29yZCIsImlzU3VuayIsImZpbHRlciIsInJlY2VpdmVBdHRhY2siLCJjb29yZEluZGV4IiwiZmluZEluZGV4IiwiYWRkRXZlbnRMaXN0ZW5lciIsImJlZ2luQnV0dG9uIiwiZGlzYWJsZWQiLCJjbGFzc05hbWUiLCJzcGxpdCIsInVzZXJHYW1lYm9hcmQiLCJzZXRUaW1lb3V0IiwiY29tcHV0ZXJUdXJuIiwiYXR0YWNrTG9vcCIsInN0YXJ0R2FtZUJ1dHRvbiJdLCJzb3VyY2VSb290IjoiIn0=